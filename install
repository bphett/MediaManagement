#!/bin/bash
# script to do initial install of media server on clean Ubuntu

#Variables
IFSOLD=$IFS
curdir="$(dirname "$(readlink -f "$0")")"
GREEN='\033[0;32m'
NC='\033[0m'
currentuser="$(id -u -n)"


#Main Logic
clear
if ! [ $(id -u) = 0 ]; then
   echo "Please run this installer as root."
   echo
   exit
fi

echo "Installing Media Server..."
echo

echo "Preparing to install..."
$curdir/configure

echo "Upgrading packages before install..."
apt-get update
apt-get upgrade -y
echo -e "${GREEN}done${NC}"

echo "Installing go..."
gotest="$(echo $GOPATH)"
if [ ! -d "/usr/local/go" ]; then
#TODO install go
#TODO set path variable
test="test"
fi
echo -e "${GREEN}done${NC}"

echo "Setting up Google Drive..."
if [ ! -e "$GOPATH/bin/drive" ]; then
#TODO install drive to /home/gopath/bin
test="test"
fi
echo -e "${GREEN}done${NC}"

echo "Setting up SickRage..."
if [ ! -d "/opt/sickrage" ]; then
apt-get install libxslt1-dev libxslt1.1 libxml2-dev libxml2 libssl-dev libffi-dev python-pip python-dev libssl-dev git -y
apt-get install build-essential -y
wget https://www.rarlab.com/rar/unrarsrc-5.5.8.tar.gz
tar -xvf unrarsrc-5.5.8.tar.gz
cd unrar
make -f makefile
install -v -m755 unrar /usr/bin
git clone https://github.com/SickRage/SickRage.git /opt/sickrage
chown $currentuser:$currentuser -R /opt/sickrage
echo "SR_USER=$currentuser
SR_HOME=/opt/sickrage
SR_DATA=/opt/sickrage
SR_PIDFILE=/home/$currentuser/.sickrage.pid" >/etc/default/sickrage
cp /opt/sickrage/runscripts/init.ubuntu /etc/init.d/sickrage
chmod +x /etc/init.d/sickrage
update-rc.d sickrage defaults
service sickrage start
service sickrage stop
fi
echo -e "${GREEN}done${NC}"

echo "Setting up CouchPotato..."
echo -e "${GREEN}done${NC}"

echo "Setting up Transmission..."
apt-get install transmission-cli transmission-common transmission-daemon -y
service transmission-daemon stop

echo -e "${GREEN}done${NC}"

echo "Setting up Apache..."
echo -e "${GREEN}done${NC}"

echo "Setting up Samba..."
echo -e "${GREEN}done${NC}"

echo "Setting up fstab..."
string1="/srv/samba /media/MediaServer none bind"
if grep -qF "$string1" /etc/fstab;then
   test="test"
else
   echo "$string1" >> /etc/fstab
fi
echo -e "${GREEN}done${NC}"

echo "Setting up Filebot..."
add-apt-repository -y ppa:webupd8team/java
apt-get update
apt-get install oracle-java8-installer -y
apt-get install oracle-java8-set-default -y
wget -O filebot-i386.deb 'http://filebot.sourceforge.net/download.php?type=deb&arch=i386'
dpkg --force-depends -i filebot-*.deb && rm filebot-*.deb
echo -e "${GREEN}done${NC}"

echo "Creating directories..."
mkdir -p /srv/samba/TV
chmod 777 /srv/samba/TV
mkdir -p /srv/samba/Movies
chmod 777 /srv/samba/Movies
mkdir -p /media/MediaServer
chmod 777 /media/MediaServer
mkdir -p /srv/samba/MediaServerFiles
chmod 777 /srv/samba/MediaServerFiles
mkdir -p /srv/samba/MediaServerFiles/ActiveTorrents
chmod 777 /srv/samba/MediaServerFiles/ActiveTorrents
mkdir -p /srv/samba/MediaServerFiles/CompletedTorrents
chmod 777 /srv/samba/MediaServerFiles/CompletedTorrents
mkdir -p /srv/samba/MediaServerFiles/Delete
chmod 777 /srv/samba/MediaServerFiles/Delete
mkdir -p /srv/samba/MediaServerFiles/Logs
chmod 777 /srv/samba/MediaServerFiles/Logs
mkdir -p /srv/samba/MediaServerFiles/MSShared
chmod 777 /srv/samba/MediaServerFiles/MSShared
mkdir -p /srv/samba/MediaServerFiles/Processing
chmod 777 /srv/samba/MediaServerFiles/Processing
echo -e "${GREEN}done${NC}"

echo "Copying files..."
cp -Hr $curdir/update /srv/samba/GitHub
chmod 777 /srv/samba/GitHub/update
/srv/samba/GitHub/update
echo -e "${GREEN}done${NC}"

echo
echo "We now need to reboot your system."
read -p "Press [Enter] to reboot..."
reboot
